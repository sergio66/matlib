function  run_airicrad_allfov_gran(cfg)
% 
%
% read in a directory of rtp files (most likely constituting a day
% of data) and concatenate them into a single output rtp
% file. Calls cat_rtp_dir() which does the bulk of the actual
% concatenation. This routine drives input/output selection and
% does the final rtpwrite

addpath('~/git/rtp_prod2_DEV/util');  % rtpread,rtpwrite,cat_rtp_dir
addpath('~/git/rtp_prod2_DEV/airs');  % sub_airxbcal

% 
% $$$ airs_daily_file_list = '~/rtp_gen_files/airicrad_grans_to_process';
airs_daily_file_list = cfg.file_list;

% grab the slurm array index for this process
slurmindex = str2num(getenv('SLURM_ARRAY_TASK_ID'));
%slurmindex = 0;

% for each slurm array index, process 30 days from the to-process
% list (because each day takes less time to process than it takes
% to load matlab so, it is inefficient to do each day as a
% separate array)
chunk = cfg.chunk;
for i = 1:chunk
    dayindex = (slurmindex*chunk) + i;
    %    dayindex=281; % testing testing testing
    fprintf(1, '>>> chunk %d    dayindex %d\n', i, dayindex);
    
    % File ~/cris-files-process.txt is a list of filepaths to the input
    % files or this processing. For the initial runs, this was
    % generated by a call to 'ls' while sitting in the directory
    % /asl/data/cris/ccast/sdr60_hr/2015: 
    %    ls -d1 $PWD/{048,049,050}/*.mat >> ~/cris-files-process.txt
    %
    % cris-files-process.txt, then, contains lines like:
    %    /asl/data/cris/ccast/sdr60_hr/2015/048/SDR_d20150217_t1126169.mat
    [status, inpath] = system(sprintf('sed -n "%dp" %s | tr -d "\n"', ...
                                     dayindex, airs_daily_file_list));
    if strcmp(inpath, '')
        break;
    end

    [head,hattr,prof,pattr] = create_airicrad_allfov_gran_rtp(inpath, cfg);

    % /asl/data/airs/L1C/2003/021/AIRS.2003.01.21.207.L1C.AIRS_Rad.v6.1.2.0.G16323214907.hdf
    [gpath, gname, ext] = fileparts(inpath);
    
    C = strsplit(gpath, '/');
    airs_yearstr = C{6};
    airs_doystr = C{7};

    C = strsplit(gname, '.');
    granstr = C{5};
    
    % Make directory if needed
    %
    asType = {'allfov'};
    for i = 1:length(asType)
        % check for existence of output path and create it if necessary. This may become a source
        % for filesystem collisions once we are running under slurm.
        sPath = fullfile(cfg.outputdir, char(asType(i)), airs_yearstr, ...
                         airs_doystr);
        fprintf(1, '>>> Writing output rtp to directory %s\n', sPath);
        if exist(sPath) == 0
            fprintf(1, '>>>> %s does not exist. Creating\n', sPath);
            mkdir(sPath);
        end
        
        % Now save the four types of cris files
        fprintf(1, '>>> writing output rtp file... ');
        MAXOBS = 40000;
        if length(prof.rtime) > MAXOBS
            prof = rtp_sub_prof(prof, randperm(length(prof.rtime), ...
                                               MAXOBS));
        end
        % output naming convention:

        fname = sprintf('%s_%s_airicrad_d%s%s_%s.rtp', asType{i}, ...
                        cfg.model, airs_yearstr, airs_doystr, granstr);
        fprintf(1, '%s\n', fname);
        rtp_outname = fullfile(sPath, fname);
        rtpwrite(rtp_outname,head,hattr,prof,pattr);
        fprintf(1, 'Done\n');
    end


    
end  % ends loop over chunk
